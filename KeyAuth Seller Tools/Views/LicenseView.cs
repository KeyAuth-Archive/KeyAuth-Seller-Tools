using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace KeyAuth_Seller_Tools.Views
{
    public partial class LicenseView : UserControl
    {
        public int totalKeys = 0;
        public int usedKeys = 0;
        public int unusedkeys = 0;
        public int bannedKeys = 0;
        public LicenseView()
        {
            InitializeComponent();
        }

        private void LicenseView_Load(object sender, EventArgs e)
        {
            MainForm.sellerApi.LicenseViewAll();
            if (!MainForm.sellerApi.response.Success)
            {
                MessageBox.Show(MainForm.sellerApi.response.Message);
                return;
            }
            foreach(var info in MainForm.sellerApi.license.Keys)
            {
                if (UsernamesCBX.Items.Contains(info.Genby))
                    return;
                UsernamesCBX.Items.Add(info.Genby);
            }
        }

        private void UsernamesCBX_SelectedIndexChanged(object sender, EventArgs e)
        {
            CheckForLicenses(true);
            
        }
        public void CheckForLicenses(bool first)
        {
            LogBoxRTB.Clear();
            totalKeys = 0;
            usedKeys = 0;
            unusedkeys = 0;
            bannedKeys = 0;
            AllCB.Enabled = false;
            UsedCB.Enabled = false;
            UnusedCB.Enabled = false;
            BannedCB.Enabled = false;
            DeleteBTN.Enabled = false;


            MainForm.sellerApi.LicenseViewAll();
            if (!MainForm.sellerApi.response.Success)
            {
                MessageBox.Show(MainForm.sellerApi.response.Message);
                return;
            }
            foreach (var info in MainForm.sellerApi.license.Keys)
                if (info.Genby.ToLower() == UsernamesCBX.SelectedItem.ToString()?.ToLower())
                {
                    totalKeys++;
                    if (info.Status == "Used")
                        usedKeys++;
                    if (info.Status == "Not Used")
                        unusedkeys++;
                    if (info.Status == "Banned")
                        bannedKeys++;
                }
            TotalKeysLB.Text = totalKeys.ToString();
            UsedKeysLB.Text = usedKeys.ToString();
            UnusedKeysLB.Text = unusedkeys.ToString();
            BannedKeysLB.Text = bannedKeys.ToString();
            if (totalKeys > 0)
            {
                AllCB.Enabled = true;
                DeleteBTN.Enabled = true;
                if (usedKeys > 0)
                    UsedCB.Enabled = true;
                if (unusedkeys > 0)
                    UnusedCB.Enabled = true;
                if (bannedKeys > 0)
                    BannedCB.Enabled = true;
            }
            else
                if (first)
                MessageBox.Show($"Can not seem to find any keys that have been generated by the user with the name of {UsernamesCBX.SelectedItem}.\n\nNote:\nMake sure the account name is correct!!", "No Keys.", MessageBoxButtons.OK, MessageBoxIcon.Exclamation, MessageBoxDefaultButton.Button1);
        }

        private void AllCB_CheckedChanged(object sender, EventArgs e)
        {
            if (AllCB.Checked)
            {
                UsedCB.Checked = false;
                UnusedCB.Checked = false;
                BannedCB.Checked = false;
            }
        }

        private void UsedCB_CheckedChanged(object sender, EventArgs e)
        {
            if (UsedCB.Checked)
            {
                AllCB.Checked = false;
                UnusedCB.Checked = false;
                BannedCB.Checked = false;
            }
        }

        private void UnusedCB_CheckedChanged(object sender, EventArgs e)
        {
            if (UnusedCB.Checked)
            {
                AllCB.Checked = false;
                UsedCB.Checked = false;
                BannedCB.Checked = false;
            }
        }

        private void BannedCB_CheckedChanged(object sender, EventArgs e)
        {
            if (BannedCB.Checked)
            {
                AllCB.Checked = false;
                UsedCB.Checked = false;
                UnusedCB.Checked = false;
            }
        }

        private void LicenseRemoverWorker_DoWork(object sender, DoWorkEventArgs e)
        {
            CheckForIllegalCrossThreadCalls = false;
            LogBoxRTB.Text += $"[#] Started deleting licenses.\n";

            foreach (var info in MainForm.sellerApi.license.Keys)
            {
                if (info.Genby.ToLower() == UsernamesCBX.SelectedItem.ToString()?.ToLower())
                {
                    
                    if (AllCB.Checked)
                    {
                        MainForm.sellerApi.LicenseDelete(info.Key);
                        LogBoxRTB.Text += $"[#] {MainForm.sellerApi.response.Message}\n";
                    }
                    else if (UsedCB.Checked)
                    {
                        if (info.Status == "Used")
                        {
                            MainForm.sellerApi.LicenseDelete(info.Key);
                            LogBoxRTB.Text += $"[#] {MainForm.sellerApi.response.Message}\n";
                        }

                    }
                    else if (UnusedCB.Checked)
                    {
                        if (info.Status == "Not Used")
                        {
                            MainForm.sellerApi.LicenseDelete(info.Key);
                            LogBoxRTB.Text += $"[#] {MainForm.sellerApi.response.Message}\n";
                        }

                    }
                    else if (BannedCB.Checked)
                    {
                        if (info.Status == "Banned")
                        {
                            MainForm.sellerApi.LicenseDelete(info.Key);
                            LogBoxRTB.Text += $"[#] {MainForm.sellerApi.response.Message}\n";
                        }
                    }

                }
            }
        }

        private void LicenseRemoverWorker_RunWorkerCompleted(object sender, RunWorkerCompletedEventArgs e)
        {
            LogBoxRTB.Text += "[#] Finished";
            MessageBox.Show("Finished deleting keys.");
            AllCB.Checked = false;
            UsedCB.Checked = false;
            UnusedCB.Checked = false;
            BannedCB.Checked = false;
            CheckForLicenses(false);
        }

        private void DeleteBTN_Click(object sender, EventArgs e)
        {
            LogBoxRTB.Clear();
            if (!AllCB.Checked && !UsedCB.Checked && !UnusedCB.Checked && !BannedCB.Checked)
            {
                MessageBox.Show("You did not make a selection.");
                return;
            }
            LicenseRemoverWorker.RunWorkerAsync();
        }
    }
}
